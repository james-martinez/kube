---
# Source: postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-postgresql
  labels:
    app: postgresql
    chart: postgresql-3.15.0
    release: "keycloak"
    heritage: "Helm"
type: Opaque
data:
  postgresql-password: "a2V5Y2xvYWs="
---
# Source: postgresql/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: keycloak-postgresql-headless
  labels:
    app: postgresql
    chart: postgresql-3.15.0
    release: "keycloak"
    heritage: "Helm"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: postgresql
    port: 5432
    targetPort: postgresql
  selector:
    app: postgresql
    release: "keycloak"
---
# Source: postgresql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: keycloak-postgresql
  labels:
    app: postgresql
    chart: postgresql-3.15.0
    release: "keycloak"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
  - name: postgresql
    port: 5432
    targetPort: postgresql
  selector:
    app: postgresql
    release: "keycloak"
    role: master
---
# Source: postgresql/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak-postgresql
  labels:
    app: postgresql
    chart: postgresql-3.15.0
    release: "keycloak"
    heritage: "Helm"
spec:
  serviceName: keycloak-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: postgresql
      release: "keycloak"
      role: master
  template:
    metadata:
      name: keycloak-postgresql
      labels:
        app: postgresql
        chart: postgresql-3.15.0
        release: "keycloak"
        heritage: "Helm"
        role: master
    spec:      
      securityContext:
        fsGroup: 1001
      initContainers:
      - name: init-chmod-data
        image: docker.io/bitnami/minideb:latest
        imagePullPolicy: "Always"
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
        command:
          - sh
          - -c
          - |
            chown -R 1001:1001 /bitnami
            if [ -d /bitnami/postgresql/data ]; then
              chmod  0700 /bitnami/postgresql/data;
            fi
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: data
          mountPath: /bitnami/postgresql
      containers:
      - name: keycloak-postgresql
        image: docker.io/bitnami/postgresql:10.7.0
        imagePullPolicy: "Always"
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
        securityContext:
          runAsUser: 1001
        env:
        - name: PGDATA
          value: "/bitnami/postgresql"
        - name: POSTGRES_USER
          value: "keycloak"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-postgresql
              key: postgresql-password
        - name: POSTGRES_DB
          value: "keycloak"
        ports:
        - name: postgresql
          containerPort: 5432
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready -U "keycloak" -d "keycloak" -h localhost
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready -U "keycloak" -d "keycloak" -h localhost
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        volumeMounts:
        - name: data
          mountPath: /bitnami/postgresql
      volumes:
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "2Gi"
